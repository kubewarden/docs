"use strict";(self.webpackChunkkubewarden_docusaurus=self.webpackChunkkubewarden_docusaurus||[]).push([[59403],{4682:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var n=t(85893),r=t(11151);const o={sidebar_label:"Introduction",title:""},s="Gatekeeper",a={id:"writing-policies/rego/gatekeeper/intro",title:"",description:"Gatekeeper support has been introduced starting from these releases:",source:"@site/versioned_docs/version-1.9/writing-policies/rego/gatekeeper/01-intro.md",sourceDirName:"writing-policies/rego/gatekeeper",slug:"/writing-policies/rego/gatekeeper/intro",permalink:"/1.9/writing-policies/rego/gatekeeper/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/kubewarden/docs/edit/main/versioned_docs/version-1.9/writing-policies/rego/gatekeeper/01-intro.md",tags:[],version:"1.9",lastUpdatedAt:1724060087e3,sidebarPosition:1,frontMatter:{sidebar_label:"Introduction",title:""},sidebar:"docs",previous:{title:"Raw policies",permalink:"/1.9/writing-policies/rego/open-policy-agent/raw-policies"},next:{title:"Create a New Policy",permalink:"/1.9/writing-policies/rego/gatekeeper/create-policy"}},l={},c=[{value:"Compatibility with existing policies",id:"compatibility-with-existing-policies",level:2}];function p(e){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"gatekeeper",children:"Gatekeeper"})}),"\n",(0,n.jsxs)(i.admonition,{type:"note",children:[(0,n.jsx)(i.p,{children:"Gatekeeper support has been introduced starting from these releases:"}),(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"kwctl: v0.2.0"}),"\n",(0,n.jsx)(i.li,{children:"policy-server: v0.2.0"}),"\n"]})]}),"\n",(0,n.jsx)(i.p,{children:"Gatekeeper is a project targeting Kubernetes, and as such, has some\nfeatures that are thought out of the box for being integrated with it."}),"\n",(0,n.jsx)(i.h2,{id:"compatibility-with-existing-policies",children:"Compatibility with existing policies"}),"\n",(0,n.jsx)(i.p,{children:"All the existing Gatekeeper policies should be compatible with\nKubewarden as we will explain during this chapter."}),"\n",(0,n.jsx)(i.admonition,{type:"info",children:(0,n.jsx)(i.p,{children:"If this is not the case, please report it to us and we\nwill do our best to make sure your policy runs flawlessly with\nKubewarden."})}),"\n",(0,n.jsxs)(i.p,{children:["Policies have to be compiled with the ",(0,n.jsx)(i.code,{children:"opa"})," CLI to the ",(0,n.jsx)(i.code,{children:"wasm"})," target."]}),"\n",(0,n.jsxs)(i.p,{children:["In terms of policy execution, you can read more about the ",(0,n.jsx)(i.a,{href:"../builtin-support",children:"Open Policy\nAgent built-in support that is implemented in\nKubewarden"}),"."]})]})}function d(e={}){const{wrapper:i}={...(0,r.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},11151:(e,i,t)=>{t.d(i,{Z:()=>a,a:()=>s});var n=t(67294);const r={},o=n.createContext(r);function s(e){const i=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(o.Provider,{value:i},e.children)}}}]);