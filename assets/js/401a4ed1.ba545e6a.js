"use strict";(self.webpackChunkkubewarden_docusaurus=self.webpackChunkkubewarden_docusaurus||[]).push([[95645],{5597:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"use-cases","title":"How to use this project?","description":"how is the Kubewarden documentation organized?","source":"@site/docs/use-cases.md","sourceDirName":".","slug":"/use-cases","permalink":"/next/use-cases","draft":false,"unlisted":false,"editUrl":"https://github.com/kubewarden/docs/edit/main/docs/use-cases.md","tags":[],"version":"current","lastUpdatedAt":1745927919000,"sidebarPosition":74,"frontMatter":{"sidebar_label":"Use cases","sidebar_position":74,"title":"How to use this project?","description":"how is the Kubewarden documentation organized?","keywords":["Kubewarden","documentation","use cases","case studies"],"doc-persona":["kubewarden-all"],"doc-type":["explanation"],"doc-topic":["explanation"]},"sidebar":"docs","previous":{"title":"For who?","permalink":"/next/personas"},"next":{"title":"Organization","permalink":"/next/organization"}}');var a=n(74848),o=n(28453);const r={sidebar_label:"Use cases",sidebar_position:74,title:"How to use this project?",description:"how is the Kubewarden documentation organized?",keywords:["Kubewarden","documentation","use cases","case studies"],"doc-persona":["kubewarden-all"],"doc-type":["explanation"],"doc-topic":["explanation"]},i=void 0,c={},l=[{value:"Case A: as a Kubernetes operator, I want to ensure my cluster is safe and compliant.",id:"case-a-as-a-kubernetes-operator-i-want-to-ensure-my-cluster-is-safe-and-compliant",level:4},{value:"Case B: As a Kubernetes operator, I want to provide a framework to my Kubernetes users so they can self-service in their Namespaces.",id:"case-b-as-a-kubernetes-operator-i-want-to-provide-a-framework-to-my-kubernetes-users-so-they-can-self-service-in-their-namespaces",level:4},{value:"Case C: As a policy author, I want to use the tools and languages that I know to write new policies.",id:"case-c-as-a-policy-author-i-want-to-use-the-tools-and-languages-that-i-know-to-write-new-policies",level:4},{value:"Case D: As a system integrator, I want to re-use Kubewarden as part of my security and compliante solution",id:"case-d-as-a-system-integrator-i-want-to-re-use-kubewarden-as-part-of-my-security-and-compliante-solution",level:4}];function d(e){const s={a:"a",code:"code",h4:"h4",p:"p",...(0,o.R)(),...e.components},{Head:n}=s;return n||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n,{children:(0,a.jsx)("link",{rel:"canonical",href:"https://docs.kubewarden.io/use-cases"})}),"\n",(0,a.jsxs)(s.p,{children:["Here stand some example use cases for our ",(0,a.jsx)(s.a,{href:"/next/personas",children:"personas"}),"."]}),"\n",(0,a.jsx)(s.h4,{id:"case-a-as-a-kubernetes-operator-i-want-to-ensure-my-cluster-is-safe-and-compliant",children:"Case A: as a Kubernetes operator, I want to ensure my cluster is safe and compliant."}),"\n",(0,a.jsxs)(s.p,{children:["I deploy Kubewarden and its default configuration with its\n",(0,a.jsx)(s.code,{children:"kubewarden-defaults"})," Helm chart, in the ",(0,a.jsx)(s.code,{children:"kubewarden"})," Namespace. This deploys a\ndefault PolicyServer and recommended ClusterAdmissionPolicies in the\n",(0,a.jsx)(s.code,{children:"kubewarden"})," namespace, solely under the control of the Kubernetes operator."]}),"\n",(0,a.jsxs)(s.p,{children:["As an operator, I can add more PolicyServers under a managed Namespace\n(such as ",(0,a.jsx)(s.code,{children:"kubewarden"}),") to distribute load and fault tolerance."]}),"\n",(0,a.jsx)(s.p,{children:"The operator can deploy more ClusterAdmissionPolicies and ClusterAdmissionPolicyGroups\nthat check the totality of the Kubernetes resources, for any type of\noperation (GET, CREATE, UPDATE, PATCH, DELETE, PROXY). This ensures operations into the\ncluster are safe and compliant. This includes security, compliance (to\nindustry standards or company regulations), resource optimization (via\nmutating policies), governance of Kubernetes environments (via labels and\nnaming conventions), best practices, image verification, etc."}),"\n",(0,a.jsx)(s.p,{children:"There will be changes in security expectations in the future.\nWhat was previously correct to be deployed in the cluster may no longer be correct.\nYet Kubewarden has already accepted those operations in the cluster. In these situations the operator can deploy the Audit\nScanner feature, a CronJob that runs periodically and evaluates the existing\nresources in the cluster. This ensures the cluster is safe and compliant even\nover time."}),"\n",(0,a.jsxs)(s.p,{children:["The operator can configure some or all the policies in ",(0,a.jsx)(s.code,{children:"monitor"})," mode instead\nof ",(0,a.jsx)(s.code,{children:"protect"})," mode, to learn from the state of the cluster without blocking operations."]}),"\n",(0,a.jsx)(s.p,{children:"As usual, the operator can receive information from policies and the Kubewarden stack\nby consuming logs and OpenTelemetry information for metrics and tracing."}),"\n",(0,a.jsx)(s.h4,{id:"case-b-as-a-kubernetes-operator-i-want-to-provide-a-framework-to-my-kubernetes-users-so-they-can-self-service-in-their-namespaces",children:"Case B: As a Kubernetes operator, I want to provide a framework to my Kubernetes users so they can self-service in their Namespaces."}),"\n",(0,a.jsx)(s.p,{children:"As an operator, I deploy Kubewarden as in Case A for a set of policies of my choosing.\nThis provides me with safe baseline in the cluster, that other users cannot evade."}),"\n",(0,a.jsx)(s.p,{children:"In addition to Case A, I have different personas per Namespaces: perhaps\nteams, team administrators, test deployments, etc.\nI allow each Namespace administrator to self-service by letting them deploy\nPolicyServers in their Namespace, along with namespaced AdmissionPolicies and\nAdmissionPolicyGroups. This architecture means that they are in control of\ntheir PolicyServer and policies, the policies only apply to their Namespace,\nand the resource usage is contained also to their Namespace."}),"\n",(0,a.jsx)(s.p,{children:"This also allows the operator to segregate noisy tenants, reserving\nperformant PolicyServers for those tenants and tasks that need high\nthroughput and low latency for example."}),"\n",(0,a.jsx)(s.h4,{id:"case-c-as-a-policy-author-i-want-to-use-the-tools-and-languages-that-i-know-to-write-new-policies",children:"Case C: As a policy author, I want to use the tools and languages that I know to write new policies."}),"\n",(0,a.jsxs)(s.p,{children:["Kubewarden achieves this by supporting any language that compiles to\nWebAssembly as possible target languages for policies. This means that policy authors\ncan reuse their workflows (",(0,a.jsx)(s.code,{children:"git"}),", CI, editors, peer reviews, etc), and tools:\nlanguages, language libraries, testing harnesses and frameworks, etc."]}),"\n",(0,a.jsxs)(s.p,{children:["This allows re-using Domain Specific Languages (like Rego, CEL, Kyverno's\nYAML+macros) or general-purpose languages (like Go, Rust, C#, Javascript, any\nthat compiles to Wasm). Kubewarden provides ",(0,a.jsx)(s.a,{href:"/next/tutorials/writing-policies/",children:"SDKs"})," for some languages as\nfirst-class support."]}),"\n",(0,a.jsxs)(s.p,{children:["Kubewarden policies can be as simple as desired, or complex\n",(0,a.jsx)(s.a,{href:"/next/explanations/context-aware-policies",children:"context-aware"}),"\npolicies. Context-aware policies can also be used to interface with separate\nworkloads (for example, to obtain information from an image scanner\nlong-running service)."]}),"\n",(0,a.jsx)(s.h4,{id:"case-d-as-a-system-integrator-i-want-to-re-use-kubewarden-as-part-of-my-security-and-compliante-solution",children:"Case D: As a system integrator, I want to re-use Kubewarden as part of my security and compliante solution"}),"\n",(0,a.jsx)(s.p,{children:"As a system integration, I want to re-use Kubewarden, and/or re-use other solutions by including\nthem in Kubewarden."}),"\n",(0,a.jsxs)(s.p,{children:["As a system integrator, I can reuse parts of Kubewarden, such as the\n",(0,a.jsx)(s.code,{children:"policy-server"}),", to police resources inside of the Kubernetes cluster, or\noutside of the cluster via the ",(0,a.jsx)(s.a,{href:"/next/howtos/raw-policies",children:'"raw\npolicies"'})," feature."]}),"\n",(0,a.jsxs)(s.p,{children:["The system integrator can chose to deploy the ",(0,a.jsx)(s.code,{children:"kubewarden-controller"})," or\nmanage the CRDs on their own, and can chose to deploy or scale the Audit\nScanner as needed."]}),"\n",(0,a.jsx)(s.p,{children:"I can create new components, for example an image scanner, and interface with\nit via a context-aware policy, without having a monolithic implementation in\na Kubernetes controller."})]})}function u(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>i});var t=n(96540);const a={},o=t.createContext(a);function r(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);